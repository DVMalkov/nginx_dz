---
- name: (AlmaLinux/Amazon Linux/CentOS/Oracle Linux/RHEL/Rocky Linux) {{ (nginx_setup == 'uninstall') | ternary('Remove', 'Configure') }} NGINX repository
  ansible.builtin.yum_repository:
    name: nginx
    baseurl: "{{ nginx_repository | default(lookup('vars', 'nginx_default_repository_' + ((ansible_facts['distribution'] == 'Amazon') | ternary('amazon', 'redhat')))) }}"
    description: NGINX repo
    enabled: true
    gpgcheck: true
    mode: "0644"
    #module_hotfixes: true
    state: "{{ (nginx_state == 'uninstall') | ternary('absent', 'present') }}"
  when: (ansible_distribution == 'Amazon' or ansible_distribution == 'RedHat' or ansible_distribution == 'CentOS' or ansible_distribution == 'OracleLinux' or ansible_distribution == 'AlmaLinux' or ansible_distribution == 'Rocky') and (nginx_install_from == 'nginx_repository') and (nginx_manage_repo | bool)

- name: (AlmaLinux/Amazon Linux/CentOS/Oracle Linux/RHEL/Rocky Linux) Force Yum cache refresh
  ansible.builtin.command: yum clean metadata
  when: nginx_manage_repo | bool
  changed_when: false

- name: (AlmaLinux/Amazon Linux/CentOS/Oracle Linux/RHEL/Rocky Linux) {{ nginx_setup | capitalize }} NGINX
  ansible.builtin.yum:
    name: nginx{{ nginx_version | default('') }}
    state: "{{ nginx_state }}"
    update_cache: true
    allow_downgrade: "{{ omit if ansible_version['full'] is version('2.12', '<') else true }}"
  ignore_errors: "{{ ansible_check_mode }}"
  notify: (Handler) Run NGINX
